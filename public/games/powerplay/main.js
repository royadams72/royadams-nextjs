/*
This ad was created with CS6 and createjs ver 2.0311

LIST OF FILES TO UPLOAD:
Mondeo_Power_Play_ADSIZE_DEV.html
Mondeo_Power_Play_ADSIZE.js - generated by flash
main.js
textSetup.js

FOLDERS:
libs
images
fonts

Copy files, rename them 300x250 etc. resize the stage.
You can import/overite images if need be.
Best to set up assets in the fla file where/near you want them to appear in the ad.
Set the car where you want it to appear from, this generates the startX var so it can be reset


The sufaces must be set up exactly where you want them to be in the fla, as they don't move.
some functions are called from within the .fla 
from the timeline, please be carefull not to delete these if editing.

Publish files, be careful, if you have imported any new images into flash, check in the html file that flash generates.
The manifest var holds all assets to be pre loaded, comapare and add the images that have changed to the manifest var in the main.js file.
But best to go to the library and update images rather than import new ones.

NOTE:
YOU MUST CHANGE THE URL/FILE NAME IN THE _DEV.HTML FILE
TO THE NEW JS FILE NAME THAT FLASH GENERATES, THIS IS LOCATED, AT THE LOWER PART OF THE SCRIPT AND IS COMMENTED.

Once the files have been published, you will need to change the x and y coords of the assets in the JS code for:
The car, car interior and percentage text fields.

please see gameTweensIn() and playAutoIn(),
The x and y properties are set there. At the begining of the functions.

If assets disapear off the stage try using the code below to put a background on the container.
This adds a background 200x200, you can make it larger if need be
var bg = new createjs.Shape(new createjs.Graphics().beginFill("#f00").drawRect(0,0,200,200));
	exportRoot.containerName.addChild(bg);

you may need to edit 
playAutoOut(), gameOverTweens() and carOut(), for timings but you shouldn't have to.

Also in the textSetUp.js you can edit text/font type etc.
Remember to place your text on the stage to where you want it to be.
NOTE:the movieclips on stage that hold text have a transparent background DO NOT remove.
There are three text vars in textSetUp.js that have been set up differently, because of display issues
playBtnDiv, findOutMoreDiv, IntelligentDiv

The begining screen and end screens have been published via the createjs toolkit.
The game animation and auto play scene have been mostly tweened using Tweenjs
All assets for the game car, car iterior etc can be found in the gameMC movieclip


*/
var canvas, stage, exportRoot, percent, leftPer, rightPer, accuracyArray, percentAWD, score, startTimerAuto, ice_anim, snow_anim, leaves_anim, car, rearTxt, frontTxt, mondeoAutoTxt, tweenArray,currentTween, autoSetTimeout, autoTimer, tl, GoTxtContainer, btn;
var isLoaded = "done";
function init() {
	canvas = document.getElementById("canvas");
	images = images||{};
	var manifest = [
		{src:"images/car_shadow.png", id:"car_shadow"},
		{src:"images/car1.png", id:"car1"},
		{src:"images/fordLogo.jpg", id:"fordLogo"},
		{src:"images/inside_car.png", id:"inside_car"},
		{src:"images/leaves.png", id:"leaves"},
		{src:"images/Mondeo_Power_Play_300x250_v9.jpg", id:"Mondeo_Power_Play_300x250_v9"},
		{src:"images/ice_road.png", id:"ice_road"},
		{src:"images/mud.png", id:"mud"},
		{src:"images/Road.jpg", id:"Road"},
		{src:"images/wheel_glow2.png", id:"wheel_glow2"},
		{src:"images/wheel_glow3.png", id:"wheel_glow3"},
		{src:"fonts/fonts.css", id:"fonts"}
	];

	var loader = new createjs.LoadQueue(false);
	loader.addEventListener("fileload", handleFileLoad);
	loader.addEventListener("progress", handleProgress)
	loader.loadManifest(manifest);
}


function handleFileLoad(evt) {
	if (evt.item.type == "image") { images[evt.item.id] = evt.result; }
}

function handleProgress(evt){
	var percentLoaded = evt.loaded * 100; 
	if(percentLoaded>=100){
		document.getElementById("canvas").style.display = "block";
		document.getElementById("canvas").style.opacity = 1;
		document.getElementById("polite").style.opacity = 0;
		document.getElementById("polite").style.display = "none";
		handleComplete();
	}else{
	console.log(Math.round(percentLoaded)+"% Loaded");	
	}
}

function handleComplete() {
	exportRoot = new lib.Mondeo_Power_Play_Leaderboard_728x90();
	stage = new createjs.Stage(canvas);
	stage.addChild(exportRoot);
	stage.update();
    stage.enableMouseOver(10);
	createjs.Ticker.timingMode = createjs.Ticker.RAF_SYNCHED;
    createjs.Ticker.setFPS(60);
	createjs.Ticker.addEventListener("tick", tickHandler);
	//vars for game
	window.meterEnded = false;
	window.gameStarted = false;
	accuracyArray = [];
	percent = 0;
	percentAWD = 0;
	tweenArray = [];
	
	//for automatic scene
	window.countup = true
    window.num = 40;
    window.loop = 4;
    window.count = 0;
	/////////////Assets for game/////////////////////////
	setUpText();//textSetup.js
	//**********************************************//
	//YOU SHOULDN'T NEED TO EDIT ANYTHING BELOW HERE//
	//**********************************************//
	car = exportRoot.game_anim.mondeo;
	car.startX = car.x;
	frontTxt  = exportRoot.game_anim.frontPercentage._copy;
	rearTxt = exportRoot.game_anim.rearPercentage._copy;
	mondeoAutoTxt = exportRoot.game_anim.mondeoAutoTxt;
    exportRoot.game_anim.rearPercentage.regX = exportRoot.game_anim.frontPercentage.regX = 137;
	exportRoot.game_anim.rearPercentage.regY = exportRoot.game_anim.frontPercentage.regY = 23;
	exportRoot.game_anim.insideCar.regX = 64;
	exportRoot.game_anim.insideCar.regY = 34;
	window.playBtnOn = true;
	///surfaces//////////////////////////////////////////
	ice_anim  = exportRoot.game_anim.ice_anim
	ice_anim.alpha = 0;
	snow_anim = exportRoot.game_anim.snow_anim;
	snow_anim.alpha = 0;
	leaves_anim = exportRoot.game_anim.leaves_anim
	leaves_anim.alpha = 0;
	
	//Define buttons and hit areas
	//add var to window to toggle playbtn, so .fla/createjs can call on loop
	
    btn = document.getElementById("btn");
  
   
	window.addPlayListener = function (){
	//	console.log(playBtnOn)
if(playBtnOn){
    exportRoot.playBtn.visible = true;
    playBtnDiv.style.display = "block";
    btn.style.display = "block";
    btn.style.visibility = "visible";
    btn.addEventListener("click",function(evt){
    console.log(evt.target);
	reset();
	exportRoot.gotoAndStop("game");
	exportRoot.game_anim.gotoAndStop("game");
	playBtnOn = false;
	gameTweensIn();
  
    }///END OF GAME function
);
		//playBtnDiv.addEventListener("click",window.game);
		//exportRoot.playBtn.addEventListener("click", window.game);
		playBtnDiv.style.top = 0;
		
		}else{
            
        btn.style.display = "none";
        btn.style.visibility = "hidden";
       // btn.playBtn.visible = false;
        //btn.removeEventListener("click", window.game);
        exportRoot.playBtn.visible = false;
        //playBtnDiv.removeEventListener("click", window.game);
  		//exportRoot.playBtn.removeEventListener("click", window.game);
        playBtnDiv.style.top =300;
		}
	}
	addPlayListener();
	//btn =  document.createElement('button');
	//btn.setAttribute("id","btn");

    //document.getElementById("container").appendChild(btn);
    
	exportRoot.playBtn.addEventListener("mouseover", mouseOverHandler);
	exportRoot.playBtn.addEventListener("mouseout", mouseOutHandler);
	var hit = new createjs.Shape(new createjs.Graphics().beginFill("#f00").drawRect(0,0,60,25));
	exportRoot.playBtn.hitArea = hit;
	
	exportRoot.clickThrough.addEventListener("click", clickThroughHandler);
	exportRoot.clickThrough.addEventListener("mouseover", ctOverHandler);
	exportRoot.clickThrough.addEventListener("mouseout", ctOutHandler);
	var hit3 = new createjs.Shape(new createjs.Graphics().beginFill("#f00").drawRect(-364,-45,728,90));
	exportRoot.clickThrough.hitArea = hit3;
	
	//Button handlers
	function mouseOverHandler(evt){
		     document.body.style.cursor='pointer';
	}
	function ctOverHandler(evt){
		     document.body.style.cursor='pointer';
			exportRoot.cta_mc.gotoAndStop("over") 
			exportRoot.cta_mc.arrow_mc.play();
			 
	}
	function ctOutHandler(evt){
		    document.body.style.cursor='default';
			exportRoot.cta_mc.gotoAndStop("out") 
			//exportRoot.cta_mc.arrow_mc.play();
			 
	}
	function mouseOutHandler(evt){
		   document.body.style.cursor='default';
	}
	function clickThroughHandler(evt){
		Enabler.exit('clickThrough');
	}
	
	
	
	function tickHandler(event) {
	addPlayListener();
	recordAccuracy();
	controlArrows();
	stage.update();
	
	}
	


window.reset = function (){
	if(tl!= undefined){
	tl.gotoAndStop(0)
	}
	clearInterval(autoTimer)
	clearTimeout(autoSetTimeout);
	
	while (tweenArray.length) {
    tweenArray.pop().setPaused(true);
	}
	window.countup = true
    window.num = 40;
    window.loop = 4;
    window.count = 0;
	
	car.x = car.startX ;
	exportRoot.game_anim.GO.scaleX = exportRoot.game_anim.GO.scaleY = .2;
	exportRoot.game_anim.frontPercentage._copy.text = "100 %";
	exportRoot.game_anim.rearPercentage._copy.text = "100 %";
	ice_anim.alpha = 0;
	leaves_anim.alpha = 0;
	snow_anim.alpha = 0;
	
	ice_anim.gotoAndStop(0);
	leaves_anim.gotoAndStop(0);
	snow_anim.gotoAndStop(0);
	
	exportRoot.game_anim.insideCar.alpha=0;
	exportRoot.game_anim.rearPercentage.alpha=0;
	exportRoot.game_anim.frontPercentage.alpha=0
	
	exportRoot.game_anim.meterMC.awd.gotoAndStop("begin");
	
}


window.game = function(){
    console.log("called")
	reset();
	exportRoot.gotoAndStop("game");
	exportRoot.game_anim.gotoAndStop("game");
	playBtnOn = false;
	gameTweensIn();
}///END OF GAME function

function gameTweensIn(){
	///////ADJUST COORDS HERE FOR ASSETS
	//car.y = edit
	exportRoot.game_anim.rearPercentage.x = -140;
	exportRoot.game_anim.frontPercentage.x =50;
	exportRoot.game_anim.frontPercentage.y = exportRoot.game_anim.rearPercentage.y = 38;
	exportRoot.game_anim.insideCar.x = -160;
	exportRoot.game_anim.insideCar.y = 45;
	/////////////Tweens//////////////////////////
	var mondeo = createjs.Tween.get(car, {override:true});
	var txt1 = createjs.Tween.get(exportRoot.game_anim.canYouTxt);
	var txt2 = createjs.Tween.get(exportRoot.game_anim.useYourTxt,{"paused":true});
	var interior = createjs.Tween.get(exportRoot.game_anim.insideCar,{"paused":true});
	var meterMC = createjs.Tween.get(exportRoot.game_anim.meterMC,{"paused":true});
	var GO_MC = createjs.Tween.get(exportRoot.game_anim.GO,{"paused":true});
	var rearPer = createjs.Tween.get(exportRoot.game_anim.rearPercentage,{"paused":true});
	var frontPer = createjs.Tween.get(exportRoot.game_anim.frontPercentage,{"paused":true});
	///////CAR GOING OFF STAGE, ADJUST COORDS HERE FOR THE CAR IF NEED BE
	mondeo.to({x:-219}, 2000);
	tweenArray.push(mondeo);
	
	txt1.wait(500).to({alpha:1}, 400).wait(2000).to({alpha:0}, 300).wait(500).play(txt2);
	tweenArray.push(txt1);
	///////ADJUST COORDS HERE FOR THE CAR IF NEED BE
	txt2.to({alpha:1}, 300).wait(2000).to({alpha:0}, 300).wait(500).play(interior);
	tweenArray.push(txt2);
	
	interior.to({alpha:1}, 1000).wait(100).play(meterMC)
	tweenArray.push(interior);
	
	meterMC.to({alpha:1}, 1000).wait(500).call(playMeter).wait(3000).play(GO_MC)
	tweenArray.push(meterMC);
	
	GO_MC.to({scaleX:0.81,scaleY:0.81,alpha:1},500).to({scaleX:1,scaleY:1},500).to({scaleX:1.24,scaleY:1.24,alpha:0},500).play(rearPer).play(frontPer)
	tweenArray.push(GO_MC);
	
	rearPer.wait(500).to({alpha:1}, 1000);
	tweenArray.push(rearPer);
	
	frontPer.wait(500).to({alpha:1}, 1000).wait(800).call(startGame);
	tweenArray.push(frontPer);
	
	
	function playMeter(){
		exportRoot.game_anim.meterMC.gotoAndPlay("in");
		}	
			
	
}//END gameTweensIn();
function startGame(){
	 window.gameStarted = true;
	 surfaces();
	 }
window.gameOver = function(){//this is called at the end of the surfaces function
	gameOverTweens();
}

function gameOverTweens(){
	window.gameStarted = false;
	 createjs.Tween.get(exportRoot.game_anim.meterMC).wait(500).to({alpha:0}, 500);
	 createjs.Tween.get(exportRoot.game_anim.meterMC.arrowYou).to({y:0}, 500);
	 createjs.Tween.get(exportRoot.game_anim.insideCar, {override:true}).to({alpha:0}, 1000);
	 createjs.Tween.get(exportRoot.game_anim.rearPercentage, {override:true}).to({alpha:0}, 1000);
	 createjs.Tween.get(exportRoot.game_anim.frontPercentage, {override:true}).to({alpha:0}, 1000).wait(500).call(carOut);
	 function carOut(){
		 //You can edit here
		createjs.Tween.get(car, {override:true}).to({x:300}, 1000).wait(500).call(continueAd);
		function continueAd(){
			setAccuracyPercentage();
			exportRoot.gotoAndPlay("continue");
			
		}
	}
}

//is called from .fla/createjs timeline
window.playAutoIn = function(){
	///////ADJUST COORDS HERE FOR ASSETS
	exportRoot.game_anim.rearPercentage.x = 0;
	exportRoot.game_anim.frontPercentage.x = 185;
	exportRoot.game_anim.frontPercentage.y = exportRoot.game_anim.rearPercentage.y = 38;
	exportRoot.game_anim.insideCar.regX = 64;
	exportRoot.game_anim.insideCar.regY = 34; 
	exportRoot.game_anim.insideCar.x = -20;
	exportRoot.game_anim.insideCar.y = 45;
	
	var txt1 = createjs.Tween.get(mondeoAutoTxt);
	var mondeo = createjs.Tween.get(exportRoot.game_anim.mondeo,{"paused":true});
	var interior = createjs.Tween.get(exportRoot.game_anim.insideCar,{"paused":true})
	var rearPer = createjs.Tween.get(exportRoot.game_anim.rearPercentage,{"paused":true});
	var frontPer = createjs.Tween.get(exportRoot.game_anim.frontPercentage,{"paused":true});
	
	txt1.wait(500).to({alpha:1}, 1500).play(mondeo).wait(2500).to({alpha:0}, 500);
	tweenArray.push(txt1);
	///////ADJUST COORDS HERE FOR THE CAR IF NEED BE
	mondeo.to({x:-80}, 2500).wait(500).play(interior).play(rearPer).play(frontPer);
	tweenArray.push(mondeo);
	interior.to({alpha:1}, 1000)
	tweenArray.push(interior);
	rearPer.wait(500).to({alpha:1}, 1000);
	tweenArray.push(rearPer);
	frontPer.wait(500).to({alpha:1}, 1000).wait(800).call(playAutoScene);
	tweenArray.push(frontPer);
	}

window.playAutoOut = function (){
	var mondeo = createjs.Tween.get(exportRoot.game_anim.mondeo,{"paused":true});
	var interior = createjs.Tween.get(exportRoot.game_anim.insideCar)
	var rearPer = createjs.Tween.get(exportRoot.game_anim.rearPercentage);
	var frontPer = createjs.Tween.get(exportRoot.game_anim.frontPercentage);

	interior.to({alpha:0}, 700)
	tweenArray.push(interior);
	rearPer.to({alpha:0}, 700);
	tweenArray.push(rearPer);
	frontPer.to({alpha:0}, 700).wait(700).play(mondeo);
	tweenArray.push(frontPer);
	///////ADJUST COORDS HERE FOR THE CAR IF NEED BE
	mondeo.to({x:300}, 1000).wait(500).call(play_endFrame);
	tweenArray.push(mondeo);
	
	function play_endFrame(){
	exportRoot.gotoAndPlay("end_frame");
	reset();
 	 }

}


window.addCTAs = function(){
findOutMoreDiv.style.top = 0;
IntelligentDiv.style.top = 0;	
}
//**********************************************//
//YOU SHOULDN'T NEED TO EDIT ANYTHING BELOW HERE//
//**********************************************//

function controlArrows(){
	//MAKES THE YOU ARROW FOLLOW THE MOUSE
	//DO NOT EDIT
	if(window.gameStarted == true){
		//width of the meter bar
	var mouseRight = 0;
    var mouseLeft = 180;
var arrowAwdY = exportRoot.game_anim.meterMC.awd.arrowAWD.y
    percentAWD  = Math.round(((arrowAwdY) / (180)*100))
	var pt = exportRoot.game_anim.meterMC.globalToLocal(stage.mouseX, stage.mouseY);
	if ( pt.y >= mouseLeft){
		exportRoot.game_anim.meterMC.arrowYou.y = 180;
		exportRoot.game_anim.frontPercentage._copy.text = "0 %";
		exportRoot.game_anim.rearPercentage._copy.text = "100 %";	
		percent = 100;
	} else if (pt.y <= mouseRight){
		exportRoot.game_anim.meterMC.arrowYou.y = 0;
		exportRoot.game_anim.frontPercentage._copy.text = "100 %";
		exportRoot.game_anim.rearPercentage._copy.text = "0 %";	
		percent = 0;
	} else {
	percent = Math.round(((pt.y - mouseRight) / (mouseLeft - mouseRight)*100));
	exportRoot.game_anim.meterMC.arrowYou.y = pt.y;	
	setWheels(percent);
		}
	}	
}	

function setWheels(num){
	var p = num;
	exportRoot.game_anim.insideCar.front.alpha = (100-p)/100;
    exportRoot.game_anim.insideCar.rear.alpha = p/100;
	exportRoot.game_anim.frontPercentage._copy.text = 100-p +" %"
	exportRoot.game_anim.rearPercentage._copy.text = p +" %";
}

function recordAccuracy(){
	
	var maxScoreDistance = 20;
	var divider = 100/maxScoreDistance;
	
	if (window.gameStarted == true){
		var accuracy = (maxScoreDistance - Math.abs(percent-percentAWD)) * divider;
		if (accuracy < 0){
			accuracy = 0;
		}
		accuracyArray.push(accuracy);
	}
}//END RECORD ACCURANCY

function arrayTotal(input_Array){
	var total = 0;
	var input = input_Array;			
	for(var i = 0; i < input.length; i++){
		total += Number(input[i]);
	}
	
	//console.log(total)
	return total;
}

function setAccuracyPercentage(){
	var accuracyAverage = arrayTotal(accuracyArray)/accuracyArray.length;
	if (accuracyAverage>100){ 
		accuracyAverage = 100;
	}
	if (accuracyAverage<0){ 
		accuracyAverage = 0;
	}
		exportRoot.percentageText._copy.text = Math.floor(accuracyAverage) + "% accuracy";
	if(accuracyAverage > 100){
		exportRoot.scoreMsg.endMsg.text ="Well done"
	}else{
		exportRoot.scoreMsg.endMsg.text ="Sorry, you’re not nimble enough."
	}
   reset();
  
   }
}

//add to window so can call function from .fla/createjs timeline
window.playAutoScene = function(){
	//NOT MUCH NEED TO EDIT THIS
	//This function controls counting up and down by calling auto().
	//auto() counts up and clears the interval, then sets another interval to call this function
	//The count is incremented and auto is recalled, basically, it counts up and down, but pauses.
	
	 if(count!=loop){	
		count++
		if(count!=4){
		//console.log(count);
		autoTimer = setInterval(auto, 10);
		}else{
		// exportRoot.game_anim.gotoAndPlay("auto_out")
		 clearInterval(autoTimer);
		 window.countup = true
		 window.num = 40;
		 window.loop = 4;
		 window.count = 0;
		}
	playSurfaces(count);//this function controls the animation of the surfaces by
	//fading in and out according to the count		
	
}


function auto(){
	 var p = num;
	if(countup){
		num++
		exportRoot.game_anim.insideCar.front.alpha = (100-p)/100;
		exportRoot.game_anim.insideCar.rear.alpha = p/100;
		exportRoot.game_anim.frontPercentage._copy.text = 100-p +" %";
		exportRoot.game_anim.rearPercentage._copy.text = p +" %";
		if(num >= 100){
			countup = false;
			clearInterval(autoTimer);
			autoSetTimeout = setTimeout(playAutoScene, 400);
		}
	}else{
		num--;
			exportRoot.game_anim.insideCar.front.alpha = (100-p)/100;
			exportRoot.game_anim.insideCar.rear.alpha = p/100;
			exportRoot.game_anim.frontPercentage._copy.text = num +" %";
			exportRoot.game_anim.rearPercentage._copy.text = num +" %";
		if(num <= 40){
			countup = true;
			clearInterval(autoTimer);
			autoSetTimeout = setTimeout(playAutoScene, 200);
		}
	}
 }
		 
		 
function playSurfaces(count){	
 if (count==1){
	currentTween = createjs.Tween.get(leaves_anim).to({alpha:.7}, 500);//call end frame function
	tweenArray.push(currentTween)
	leaves_anim.gotoAndPlay("go");
	}
  	if (count==2){
	currentTween = createjs.Tween.get(leaves_anim).to({alpha:0}, 200);
	tweenArray.push(currentTween);
    }
   if (count==3){
	currentTween = createjs.Tween.get(snow_anim).to({alpha:1}, 500)
	tweenArray.push(currentTween);
	snow_anim.gotoAndPlay("go");
    }
	if (count==0){
	currentTween = createjs.Tween.get(snow_anim).to({alpha:0}, 200).wait(100).call(stopAll);
	tweenArray.push(currentTween);
	}
	function stopAll(){
	leaves_anim.gotoAndStop(0);
	snow_anim.gotoAndStop(0);
	playAutoOut();
		}
	}
	
}///
window.surfaces = function(){
	//YOU SHOULDN'T NEED TO ADJUST THIS, BUT...
	//This function sets up the surface tweens and calls a function to tell the ADW arrow which animation to play animations.
	
	var leaves = createjs.Tween.get(leaves_anim);
	var snow = createjs.Tween.get(snow_anim,{"paused":true});
	var ice = createjs.Tween.get(ice_anim,{"paused":true});
	
	leaves.call(playLeaves,["in"]).to({alpha:1}, 1000).wait(6000).call(playLeaves,["out"]).to({alpha:0}, 500).call(stopThis,[leaves_anim]).wait(100).play(snow);
	tweenArray.push(leaves);
	
	snow.call(playSnow,["in"]).to({alpha:1}, 1000).wait(6000).call(playSnow,["out"]).to({alpha:0}, 500).call(stopThis,[snow_anim]).wait(2000).play(ice);
	tweenArray.push(snow);
	
	ice.call(playIce,["in"]).to({alpha:1}, 1000).wait(6000).call(playIce,["out"]).to({alpha:0}, 500).call(stopThis,[ice_anim])
	tweenArray.push(ice);
	
	function stopThis(target){
			target.gotoAndStop(0);
		}
	//functions to match surafce animations to AWD arrow	
	function playLeaves(sequence){
	if(sequence == "in"){
	leaves_anim.gotoAndPlay("go");
	exportRoot.game_anim.meterMC.awd.gotoAndPlay("leaves");
		}else{
		exportRoot.game_anim.meterMC.awd.gotoAndPlay("leaves_end");
		}
	}
	
	function playSnow(sequence){
	if(sequence == "in"){
	snow_anim.gotoAndPlay("go");
	exportRoot.game_anim.meterMC.awd.gotoAndPlay("snow");
		}else{
		exportRoot.game_anim.meterMC.awd.gotoAndPlay("snow_end");
		}
	}
	
	function playIce(sequence){
	if(sequence == "in"){
	ice_anim.gotoAndPlay("go");
	exportRoot.game_anim.meterMC.awd.gotoAndPlay("ice");
		}else{
		exportRoot.game_anim.meterMC.awd.gotoAndPlay("ice_end");
		//end of game wait for two seconds and play out
		setTimeout(function(){
				gameOver();
			},2000)
		}
	}
	
}

//init();


